package org.neidysvelasquez.claims_management_system.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.Setter;

import java.time.LocalDateTime;

/**
 * Represents a record of a status change for a claim in the Claims Management System.
 * Tracks the old status, new status, and timestamp for each change.
 */
@Entity
@Getter
@Setter
public class StatusHistory {

    /**
     * The unique identifier for the status history entry.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The previous status of the claim before the change.
     * This field is mandatory and cannot be blank.
     */
    @NotBlank(message = "Old status is required")
    private String oldStatus;

    /**
     * The new status of the claim after the change.
     * This field is mandatory and cannot be blank.
     */
    @NotBlank(message = "New status is required")
    private String newStatus;

    /**
     * The exact date and time when the status change occurred.
     * This field is mandatory.
     */
    @NotNull(message = "Timestamp is required")
    private LocalDateTime timestamp;

    /**
     * The date and time when the status history entry was created.
     * Automatically populated when the entity is persisted.
     */
    @NotNull
    @Column(updatable = false)
    private LocalDateTime createdAt;

    /**
     * The claim associated with this status change.
     * Represents a many-to-one relationship with the `Claims` entity.
     */
    @ManyToOne
    @JoinColumn(name = "claim_id", nullable = false)
    private Claims claim;

    /**
     * Sets the `createdAt` field to the current timestamp before the entity is persisted.
     */
    @PrePersist
    protected void onCreate() {
        this.createdAt = LocalDateTime.now();
    }
}
